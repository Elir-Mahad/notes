(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[531],{5542:function(e,t,n){"use strict";n(7294);var i=n(3401),o=n(5893);t.Z=function(e){var t=e.topic,n=e.firstResTitle,r=e.firstLink,s=e.secondResTitle,a=e.secondLink,c=e.thirdResTitle,d=e.thirdLink;return(0,o.jsxs)(i.Jl,{children:[(0,o.jsxs)(i.ds,{children:["Resources about ",t," "]}),(0,o.jsxs)(i._z,{children:["Video: ",(0,o.jsx)(i.bN,{href:r,children:n})]}),(0,o.jsxs)(i._z,{children:["Video: ",(0,o.jsx)(i.bN,{href:a,children:s})]}),(0,o.jsxs)(i._z,{children:["Video: ",(0,o.jsx)(i.bN,{href:d,children:c})]})]})}},8e3:function(e,t,n){"use strict";var i;Object.defineProperty(t,"__esModule",{value:!0}),t.AmpStateContext=void 0;var o=((i=n(7294))&&i.__esModule?i:{default:i}).default.createContext({});t.AmpStateContext=o},5646:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isInAmpMode=s,t.useAmp=function(){return s(o.default.useContext(r.AmpStateContext))};var i,o=(i=n(7294))&&i.__esModule?i:{default:i},r=n(8e3);function s(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.ampFirst,n=void 0!==t&&t,i=e.hybrid,o=void 0!==i&&i,r=e.hasQuery,s=void 0!==r&&r;return n||o&&s}},2717:function(e,t,n){"use strict";var i=n(930);function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}Object.defineProperty(t,"__esModule",{value:!0}),t.defaultHead=u,t.default=void 0;var r,s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var i=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};i.get||i.set?Object.defineProperty(t,n,i):t[n]=e[n]}return t.default=e,t}(n(7294)),a=(r=n(1585))&&r.__esModule?r:{default:r},c=n(8e3),d=n(5850),h=n(5646);function u(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=[s.default.createElement("meta",{charSet:"utf-8"})];return e||t.push(s.default.createElement("meta",{name:"viewport",content:"width=device-width"})),t}function l(e,t){return"string"===typeof t||"number"===typeof t?e:t.type===s.default.Fragment?e.concat(s.default.Children.toArray(t.props.children).reduce((function(e,t){return"string"===typeof t||"number"===typeof t?e:e.concat(t)}),[])):e.concat(t)}var m=["name","httpEquiv","charSet","itemProp"];function f(e,t){return e.reduce((function(e,t){var n=s.default.Children.toArray(t.props.children);return e.concat(n)}),[]).reduce(l,[]).reverse().concat(u(t.inAmpMode)).filter(function(){var e=new Set,t=new Set,n=new Set,i={};return function(o){var r=!0,s=!1;if(o.key&&"number"!==typeof o.key&&o.key.indexOf("$")>0){s=!0;var a=o.key.slice(o.key.indexOf("$")+1);e.has(a)?r=!1:e.add(a)}switch(o.type){case"title":case"base":t.has(o.type)?r=!1:t.add(o.type);break;case"meta":for(var c=0,d=m.length;c<d;c++){var h=m[c];if(o.props.hasOwnProperty(h))if("charSet"===h)n.has(h)?r=!1:n.add(h);else{var u=o.props[h],l=i[h]||new Set;"name"===h&&s||!l.has(u)?(l.add(u),i[h]=l):r=!1}}}return r}}()).reverse().map((function(e,n){var r=e.key||n;if(!t.inAmpMode&&"link"===e.type&&e.props.href&&["https://fonts.googleapis.com/css","https://use.typekit.net/"].some((function(t){return e.props.href.startsWith(t)}))){var a=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e.props||{});return a["data-href"]=a.href,a.href=void 0,a["data-optimized-fonts"]=!0,s.default.cloneElement(e,a)}return s.default.cloneElement(e,{key:r})}))}var p=function(e){var t=e.children,n=s.useContext(c.AmpStateContext),i=s.useContext(d.HeadManagerContext);return s.default.createElement(a.default,{reduceComponentsToState:f,headManager:i,inAmpMode:h.isInAmpMode(n)},t)};t.default=p},1585:function(e,t,n){"use strict";var i=n(7980),o=n(3227),r=n(8361),s=(n(2191),n(5971)),a=n(2715),c=n(1193);function d(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=c(e);if(t){var o=c(this).constructor;n=Reflect.construct(i,arguments,o)}else n=i.apply(this,arguments);return a(this,n)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var h=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var i=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};i.get||i.set?Object.defineProperty(t,n,i):t[n]=e[n]}return t.default=e,t}(n(7294));var u=function(e){s(n,e);var t=d(n);function n(e){var r;return o(this,n),(r=t.call(this,e)).emitChange=function(){r._hasHeadManager&&r.props.headManager.updateHead(r.props.reduceComponentsToState(i(r.props.headManager.mountedInstances),r.props))},r._hasHeadManager=r.props.headManager&&r.props.headManager.mountedInstances,r}return r(n,[{key:"componentDidMount",value:function(){this._hasHeadManager&&this.props.headManager.mountedInstances.add(this),this.emitChange()}},{key:"componentDidUpdate",value:function(){this.emitChange()}},{key:"componentWillUnmount",value:function(){this._hasHeadManager&&this.props.headManager.mountedInstances.delete(this),this.emitChange()}},{key:"render",value:function(){return null}}]),n}(h.Component);t.default=u},420:function(e,t,n){"use strict";n.r(t);var i=n(9008),o=n(3401),r=n(5542),s=n(214),a=n.n(s),c=n(5893);t.default=function(){return(0,c.jsxs)("div",{children:[(0,c.jsxs)(i.default,{children:[(0,c.jsx)("title",{children:"Writing commits"}),(0,c.jsx)("meta",{name:"keywords",content:"Github, Git, frontend development, JavaScript, Tutorial, writing commits, github commits, Mahad Mohamood, conventional commits, commit with scope, git and github, commit with scope,  github projects, vscode github, github repository"}),(0,c.jsx)("meta",{name:"description",content:"In this tutorial, you will learn about conventional commit messages, and how to use type, scope, and subject to write an effective commit message"}),(0,c.jsx)("link",{href:"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400&display=swap",rel:"stylesheet"})]}),(0,c.jsx)(o.DZ,{className:a().weight100,children:"How to write a conventional commit with scope"}),(0,c.jsxs)(o.HK,{children:[(0,c.jsxs)(o.cj,{children:["In this tutorial, we are going to discuss commit messages. Commit messages are a very imporant part of the git"," ",(0,c.jsx)(o.LY,{href:"https://www.youtube.com/watch?v=3a2x1iJFJWc",children:"workflow"}),". At its core, a commit message is a set of instructions for how the code should change from a previous state to a new state. When you push your code to your repository, you will be able to see your commits in the commit history. If your commits were written properly, then the commit history will tell a story of how the project progressed over time; and as a result, other developers will be able to trace the projects progression, and easily find and fix bugs."]}),(0,c.jsx)(o.GL,{children:"How are commit messages written ?"}),(0,c.jsxs)(o.cj,{children:["There a few different formats for writing commit messages. Today we will focus on"," ",(0,c.jsx)(o.LY,{href:"https://www.conventionalcommits.org/en/v1.0.0-beta.2/",children:"conventional commits"})," ",". More specifically, we will deconstruct the process of writing a commit message with scope."]}),(0,c.jsx)(o.cj,{children:"Here is what a commit message with scope looks like:"}),(0,c.jsx)(o.EK,{children:" type(scope): subject"}),(0,c.jsx)(o.cj,{children:"When we break down this format, we notice that it is made of three parts (type, scope, subject). Each of these parts has a specific definition. We will now break down each part individually."}),(0,c.jsx)(o.GL,{children:"What does type mean ? "}),(0,c.jsxs)(o.cj,{children:["Type is a tag that identifies the type of change that you are making."," "]}),(0,c.jsx)(o.cj,{children:"These are some of the well-known commit types:"}),(0,c.jsx)(o.ro,{children:"Feat \u2013 identifies a new feature. "}),(0,c.jsx)(o.ro,{children:"Fix \u2013 identifies that a bug has been fixed."}),(0,c.jsx)(o.ro,{children:"Docs \u2013 identifies updates to the documentation such as the readme file, or the code comments."}),(0,c.jsx)(o.ro,{children:"Style \u2013 identifies updates to the css styles, code formatting, missing semi-colons, etc."}),(0,c.jsx)(o.ro,{children:"Refactor \u2013 identifies updates involving code refactoring, such as renaming files, moving functions above objects in a file, moving a file into a folder."}),(0,c.jsx)(o.ro,{children:"Chore \u2013 identifies changes such as adding / removing / updating assets, dependencies etc."}),(0,c.jsx)(o.ro,{children:" Test \u2013 identifies updates about tests. "}),(0,c.jsx)(o.ro,{children:"Perf \u2013 identifies updates about performance improvements."}),(0,c.jsx)(o.ro,{children:"Build \u2013 identifies updates that affect the build system or external dependencies."}),(0,c.jsx)(o.ro,{children:" Revert \u2013 reverts a previous commit. "}),(0,c.jsx)(o.cj,{children:"I believe that the conventional types mentioned above aren't exhaustive. Therefore, i've created custom types for myself. I will now list these types and their meanings. Feel free to use them, but keep in mind that these are not standard types."}),(0,c.jsx)(o.ro,{children:"Content - identifies content updates, such as adding or modifying texts and images etc."}),(0,c.jsx)(o.ro,{children:"Enhance - identifies additions and updates to an already existing feature."}),(0,c.jsx)(o.GL,{children:"What does scope mean ? "}),(0,c.jsx)(o.cj,{children:"The scope identifies the area (file / files / specific parts) in the code where something has changed."}),(0,c.jsx)(o.GL,{children:"What does subject mean ?"}),(0,c.jsx)(o.cj,{children:"Subject refers to a sentence that\u2019s usually 50 characters long that describes the changes that you've made, and why you\u2019ve made these changes."}),(0,c.jsx)(o.cj,{children:" Rules when writing the subject:"}),(0,c.jsx)(o.ro,{children:"The first word in your commit should identify an action. Example: add, create, document, modify, update, remove etc."}),(0,c.jsx)(o.ro,{children:" Write the commit in present-tense, imperative-style. "}),(0,c.jsxs)(o.Cp,{children:[" ","Write it as if you are giving orders to a person on how to change the code, or to the codebase on how it should change its behaviour."]}),(0,c.jsx)(o.ro,{children:" Remove unnecessary punctuation marks. "}),(0,c.jsx)(o.ro,{children:" Do not end the subject line with a period. "}),(0,c.jsx)(o.GL,{children:"Final words and commit examples"}),(0,c.jsxs)(o.cj,{children:["Now that you have an overall understanding of what the terms type, scope, and subject mean, we have one more key point to mention. When you are writing conventional commits,"," ",(0,c.jsx)("em",{children:"the whole message should be in lowercase."})," With that said, here are a few examples of conventional commits with scope:"]}),(0,c.jsxs)(o.EK,{children:['git commit -m "feat(nav): add a new feature to the nav component"'," ",(0,c.jsx)("br",{}),'git commit -m "fix(header): fix a useEffect bug in the header" ',(0,c.jsx)("br",{}),'git commit -m "doc(readme): add a component hierarchy section to the readme file"',(0,c.jsx)("br",{}),'git commit -m "style(font): change font type from ubuntu to roboto"'," "]}),(0,c.jsx)(o.GL,{children:"Linking issues to commits"}),(0,c.jsxs)(o.cj,{children:["Imagine that you're working on a task that's listed in a Github issue. This issue has the number 17. Now, if you want to link this issue to your commit mesage, then at the end of the commit message, insert a hashtag + the issue number like this:"," "]}),(0,c.jsx)(o.EK,{children:'git commit -m "fix(header): fix a useEffect bug in the header #17"'})]}),(0,c.jsx)(r.Z,{topic:"git commit messages",firstResTitle:"How to Write a Great Git Commit Message",firstLink:"https://www.youtube.com/watch?v=JiZACkPNm8U",secondResTitle:"Write git commit messages like a PRO with Conventional Commits",secondLink:"https://www.youtube.com/watch?v=OJqUWvmf4gg",thirdResTitle:"Git and GitHub explained for beginners",thirdLink:"https://www.youtube.com/watch?v=8Dd7KRpKeaE"})]})}},4075:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/writing-commit-messages",function(){return n(420)}])},214:function(e){e.exports={weight100:"Home_weight100__7sKo3",pmicon:"Home_pmicon__6yTo7",pmitem:"Home_pmitem__DP9o2",description:"Home_description__41Owk",words:"Home_words__rk1Z1",word:"Home_word__3Rnwl",slideWords:"Home_slideWords__9Pq_g",oneLiner:"Home_oneLiner__S91zd"}},9008:function(e,t,n){e.exports=n(2717)}},function(e){e.O(0,[774,888,179],(function(){return t=4075,e(e.s=t);var t}));var t=e.O();_N_E=t}]);