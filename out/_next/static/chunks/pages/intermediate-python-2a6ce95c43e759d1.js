(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[213],{4575:function(a,s,e){"use strict";e.r(s),e.d(s,{default:function(){return b}});var t=e(9008),i=e(3401),r=e(214),o=e.n(r),n=e(7294),l=e(471),c=e(6261),d=e(5893);var h=function(){var a=(0,n.useState)(!0),s=a[0],e=a[1],t=(0,n.useState)(!1),r=t[0],h=t[1],p=(0,n.useState)(!1),x=p[0],j=p[1],u=function(){j(!1),e(!0),h(!1)};return(0,d.jsxs)(i.D$,{children:[s&&(0,d.jsx)(i.JC,{className:o().pmicon,onClick:function(){j(!0),e(!1),h(!0)},children:(0,d.jsx)(l.Tkb,{})}),r&&(0,d.jsx)(i.JC,{className:o().pmicon,onClick:u,children:(0,d.jsx)(l.Q1S,{})}),x&&(0,d.jsxs)(i._0,{onMouseLeave:u,children:[(0,d.jsx)(i.CD,{children:"Table of contents"}),(0,d.jsxs)("ol",{style:{listStylePosition:"inside",padding:"0rem"},children:[(0,d.jsx)(c.rU,{to:"chap1.1",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C1: How to make a plot with two lists"})}),(0,d.jsx)(c.rU,{to:"chap1.2",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C1: How to make a scatter plot with two lists"})}),(0,d.jsx)(c.rU,{to:"chap1.3",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C1: What are histograms"})}),(0,d.jsx)(c.rU,{to:"chap1.4",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C1: How to make a histogram"})}),(0,d.jsx)(c.rU,{to:"chap1.5",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C1: Population pyramid with age, gender, and population"})}),(0,d.jsx)(c.rU,{to:"chap1.6",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C1: How to add axis labels and plot title"})}),(0,d.jsx)(c.rU,{to:"chap1.7",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C1: How to add ticks (custom axis values) and historical data"})}),(0,d.jsx)(c.rU,{to:"chap2.1",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: What are dictionaries"})}),(0,d.jsx)(c.rU,{to:"chap2.2",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: What happens if you assign two values to one key"})}),(0,d.jsx)(c.rU,{to:"chap2.3",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to add new key / value pair to an existing list"})}),(0,d.jsx)(c.rU,{to:"chap2.4",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to update the value of a key"})}),(0,d.jsx)(c.rU,{to:"chap2.5",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to delete a key value pair in a dictionary"})}),(0,d.jsx)(c.rU,{to:"chap2.6",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: Creating sub-dictionaries: dictionaries within dictionaries"})}),(0,d.jsx)(c.rU,{to:"chap2.7",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to target a key that\u2019s in a sub-dictionary"})}),(0,d.jsx)(c.rU,{to:"chap2.8",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: Two methods to add a sub-dictionary to a dictionary"})}),(0,d.jsx)(c.rU,{to:"chap2.9",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: Comparison between lists and dictionaries"})}),(0,d.jsx)(c.rU,{to:"chap2.10",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: What is the Pandas package"})}),(0,d.jsx)(c.rU,{to:"chap2.11",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to create a data DataFrame (brics data)"})}),(0,d.jsx)(c.rU,{to:"chap2.12",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to create a DataFrame using (cars data)"})}),(0,d.jsx)(c.rU,{to:"chap2.13",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: Using square brackets to select rows and columns."})}),(0,d.jsx)(c.rU,{to:"chap2.14",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use square brackets to print a pandas series with one selected column"})}),(0,d.jsx)(c.rU,{to:"chap2.15",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use square brackets to print a pandas DataFrame with one selected column"})}),(0,d.jsx)(c.rU,{to:"chap2.16",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use square brackets to print a pandas DataFrame with multiple selected columns"})}),(0,d.jsx)(c.rU,{to:"chap2.17",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use square brackets to print a pandas DataFrame with multiple selected rows"})}),(0,d.jsx)(c.rU,{to:"chap2.18",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: Using loc and iloc to select rows and columns."})}),(0,d.jsx)(c.rU,{to:"chap2.19",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use loc to print a pandas series with one selected row"})}),(0,d.jsx)(c.rU,{to:"chap2.20",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use loc to print a pandas DataFrame with one selected row"})}),(0,d.jsx)(c.rU,{to:"chap2.21",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use iloc to print a pandas DataFrame with one selected row"})}),(0,d.jsx)(c.rU,{to:"chap2.22",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use loc to print a pandas DataFrame with two selected rows"})}),(0,d.jsx)(c.rU,{to:"chap2.23",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use iloc to print a pandas DataFrame with two selected rows"})}),(0,d.jsx)(c.rU,{to:"chap2.24",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use loc to print the value of a selected row and column"})}),(0,d.jsx)(c.rU,{to:"chap2.25",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use loc to print a pandas DataFrame, with two selected columns of two selected observations (rows)"})}),(0,d.jsx)(c.rU,{to:"chap2.26",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use loc to print a series with a selected column"})}),(0,d.jsx)(c.rU,{to:"chap2.27",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use loc to print a DataFrame with a selected column"})}),(0,d.jsx)(c.rU,{to:"chap2.28",spy:!0,smooth:!0,children:(0,d.jsx)(i.vI,{onClick:u,className:o().pmitem,children:"C2: How to use loc to print a DataFrame with two selected column"})})]})]})]})},p=e(5675),x=function(a){var s=a.src,e=a.width,t=a.quality;return"https://raw.githubusercontent.com/".concat(s,"?w=").concat(e,"&q=").concat(t||75)};var j=function(){return(0,d.jsxs)("div",{children:[(0,d.jsx)(i.WC,{children:" Chapter 1"}),(0,d.jsx)(i.GL,{children:"How to make a plot with two lists. "}),(0,d.jsxs)(i.EK,{children:["import matplotlib.pyplot as plt ",(0,d.jsx)("br",{}),"# import matplotlib ",(0,d.jsx)("br",{}),"year = [1950, 1970, 1990, 2010] ",(0,d.jsx)("br",{}),"# the variable year contains a list of years ",(0,d.jsx)("br",{}),"pop = [2.519, 3.692, 5.263, 6.972] ",(0,d.jsx)("br",{}),"# the variable pop contains a list of populations"]}),(0,d.jsxs)(i.EK,{children:["plt.plot(year, pop) ",(0,d.jsx)("br",{}),"# make a plot ",(0,d.jsx)("br",{}),"# x-axis values = year ",(0,d.jsx)("br",{}),"y-axis values= population ",(0,d.jsx)("br",{}),"plt.show() ",(0,d.jsx)("br",{}),"# show the plot"]}),(0,d.jsx)(p.default,{id:"chap1.2",loader:x,src:"Elir-Mahad/notes/main/assets/interpygraphs/regular-plot.png",alt:"A line graph, with years on x-axis, and population on y-axis.",width:550,height:400}),(0,d.jsx)(i.GL,{children:" How to make a scatter plot with two lists. "}),(0,d.jsxs)(i.EK,{children:["import matplotlib.pyplot as plt ",(0,d.jsx)("br",{}),"# import matplotlib ",(0,d.jsx)("br",{}),"year = [1950, 1970, 1990, 2010] ",(0,d.jsx)("br",{}),"# the variable year contains a list of years ",(0,d.jsx)("br",{}),"pop = [2.519, 3.692, 5.263, 6.972] ",(0,d.jsx)("br",{}),"# the variable pop contains a list of populations"]}),(0,d.jsxs)(i.EK,{children:["plt.scatter(year, pop) ",(0,d.jsx)("br",{}),"# make a scatter plot ",(0,d.jsx)("br",{}),"# x-axis values = year ",(0,d.jsx)("br",{}),"#y-axis values= population ",(0,d.jsx)("br",{}),"plt.show() ",(0,d.jsx)("br",{}),"# show the scatter plot"]}),(0,d.jsx)(p.default,{id:"chap1.3",loader:x,src:"Elir-Mahad/notes/main/assets/interpygraphs/scatter-plot.png",alt:"A scatter graph with years on x-axis, population on y-axis.",width:550,height:400}),(0,d.jsx)(i.GL,{children:" What are histograms ? "}),(0,d.jsxs)(i.cj,{children:[" ","Histograms are useful for identifying the distribution of the data. In other words, are the data points equally distributed or are the data points clustered in one part of the graph. A histogram groups the number of data points based on the bin (which is a range), so you will see how the data points are distributed over the x-axis."," "]}),(0,d.jsx)(i.cj,{children:"In the below example, althought both plots have the similar data, you can see that the data distribution is much more clear in the histogram:"}),(0,d.jsx)(p.default,{loader:x,src:"Elir-Mahad/notes/main/assets/interpygraphs/histogram-explanation.png",alt:"A comaprison between two graphs. One one graph,  there is a x-axis with data points distributed on the x-axis.  The other graph is a histogram plot with three bins,  4 data points in the left bin, 6 data points in the middle bin,  2 data points in the right bin.",width:550,height:400}),(0,d.jsxs)(i.cj,{id:"chap1.4",children:[" ","For more information: check out this"," ",(0,d.jsx)(i.LY,{href:"https://corporatefinanceinsttute.com/resources/excel/study/histogram/",children:"blog"})]}),(0,d.jsx)(i.GL,{children:" How to make a histogram ? "}),(0,d.jsxs)(i.EK,{children:["import matplotlib.pyplot as plt ",(0,d.jsx)("br",{}),"# import matplotlib ",(0,d.jsx)("br",{}),"values = [0, 0.6, 1.4, 1.6, 2.2, 2.5, 2.6, 3.2, 3.5, 3.9, 4.2,6] ",(0,d.jsx)("br",{}),"# the variable values contains a list of numbers ",(0,d.jsx)("br",{}),"plt.hist(values, bins=3) ",(0,d.jsx)("br",{}),"# make a histogram plot with all the values inserted in 3 bins ",(0,d.jsx)("br",{}),"plt.show() ",(0,d.jsx)("br",{}),"# show the histogram plot"]}),(0,d.jsx)(p.default,{id:"chap1.5",loader:x,src:"Elir-Mahad/notes/main/assets/interpygraphs/histogram-example.png",alt:"A histogram plot with three bins,  4 data points in the left bin,  6 data points in the middle bin,  2 data points in the right bin.",width:550,height:400}),(0,d.jsx)(i.GL,{children:"Population pyramid with age, gender, and population."}),(0,d.jsx)(i.cj,{children:"The population pyramid below is made of two histograms. In the right histogram, the x-axis is the population in millions and the y-axis is the age range of women. In the left histogram, the x-axis is the population in millions, and the y-axis age range of the men. Individually, these histograms are fairly interesting. Additionally, by placing them next to each other, we're able to see the similarities and differences between the men and the women; such as the fact that, the largest population for both groups are in the age range of 40 to 44."}),(0,d.jsx)(p.default,{id:"chap1.6",loader:x,src:"Elir-Mahad/notes/main/assets/interpygraphs/pop-pyramid.png",alt:"Two histogram plots placed next to each other.  In the right histogram,the x-axis is the population in millions and the y-axis is the age range of women. In the left histogram, the x-axis is the population in millions, and the y-axis age range of the men.",width:550,height:400}),(0,d.jsx)(i.GL,{children:"How to add axis labels and plot title."}),(0,d.jsxs)(i.EK,{children:["import matplotlib.pyplot as plt ",(0,d.jsx)("br",{}),"# import matplotlib ",(0,d.jsx)("br",{}),"year = [1950, 1951, 1952\u2026 2100] ",(0,d.jsx)("br",{}),"# the variable year contains a list of years ",(0,d.jsx)("br",{}),"pop = [2.538, 2.57, 2.62, ..., 10.85] ",(0,d.jsx)("br",{}),"# the variable pop contains a list of populations ",(0,d.jsx)("br",{}),"plt.plot(year, pop) ",(0,d.jsx)("br",{}),"# make a plot ",(0,d.jsx)("br",{}),"# x-axis values = year ",(0,d.jsx)("br",{}),"#y-axis values= population"]}),(0,d.jsxs)(i.EK,{children:["plt.xlabel('Year') ",(0,d.jsx)("br",{}),"# add x-axis label ",(0,d.jsx)("br",{}),"plt.ylabel('Population') ",(0,d.jsx)("br",{}),"# add y-axis label ",(0,d.jsx)("br",{}),"plt.title('World Population Projections') ",(0,d.jsx)("br",{}),"# add plot title ",(0,d.jsx)("br",{}),"plt.show() ",(0,d.jsx)("br",{}),"# show the plot"]}),(0,d.jsx)(p.default,{id:"chap1.7",loader:x,src:"Elir-Mahad/notes/main/assets/interpygraphs/axis-label-title.png",alt:"A line graph, with years on x-axis, and population on y-axis, axis labels, and a title.",width:550,height:400}),(0,d.jsx)(i.GL,{children:"How to add ticks (custom axis values) and historical data."}),(0,d.jsxs)(i.cj,{children:[" ","Ticks are custom labels for the axis values. For example: if the first value in your y-axis is 10, then you can use ticks to replace 10 with \u201810books\u2019."," "]}),(0,d.jsxs)(i.EK,{children:["import matplotlib.pyplot as plt ",(0,d.jsx)("br",{}),"# import matplotlib ",(0,d.jsx)("br",{}),"year = [1950, 1951, 1952\u2026 2100] ",(0,d.jsx)("br",{}),"# the variable year contains a list of years ",(0,d.jsx)("br",{}),"pop = [2.538, 2.57, 2.62, ..., 10.85] ",(0,d.jsx)("br",{}),"# the variable pop contains a list of populations"]}),(0,d.jsxs)(i.EK,{children:["year = [1800, 1850, 1900] + year ",(0,d.jsx)("br",{}),"# add more data to the list years ",(0,d.jsx)("br",{}),"pop = [1.0, 1.262, 1.650] + pop ",(0,d.jsx)("br",{}),"# add more data to the list pop"]}),(0,d.jsxs)(i.EK,{children:["plt.plot(year, pop) ",(0,d.jsx)("br",{}),"# make a plot ",(0,d.jsx)("br",{}),"# x-axis values = year, y-axis values= population ",(0,d.jsx)("br",{}),"plt.xlabel('Year') ",(0,d.jsx)("br",{}),"# add x-axis label ",(0,d.jsx)("br",{}),"plt.ylabel('Population') ",(0,d.jsx)("br",{}),"# add y axis label ",(0,d.jsx)("br",{}),"plt.title('World Population Projections') ",(0,d.jsx)("br",{}),"# add plot title"]}),(0,d.jsxs)(i.EK,{children:["plt.yticks( ",(0,d.jsx)("br",{}),"[0, 2, 4, 6, 8, 10], ",(0,d.jsx)("br",{}),"['0', '2B', '4B', '6B', '8B', '10B'] ",(0,d.jsx)("br",{}),") # add y-axis ticks ",(0,d.jsx)("br",{}),"# the value 2 in the y-axis ",(0,d.jsx)("br",{}),"will be replaced by 2B and so on ",(0,d.jsx)("br",{}),"plt.show() ",(0,d.jsx)("br",{}),"# show the plot"]}),(0,d.jsx)(p.default,{loader:x,src:"Elir-Mahad/notes/main/assets/interpygraphs/ticks-historical-data.png",alt:"A line graph, with years on x-axis (1800 to 2100), and population on y-axis (0 TO 10Billion), axis labels, and a title. The",width:550,height:400})]})},u=function(a){var s=a.src,e=a.width,t=a.quality;return"https://raw.githubusercontent.com/".concat(s,"?w=").concat(e,"&q=").concat(t||75)};var m=function(){return(0,d.jsxs)("div",{children:[(0,d.jsx)(i.WC,{id:"chap2.1",children:"Chapter two"}),(0,d.jsx)(i.GL,{children:" What are dictionaries ?"}),(0,d.jsx)(i.cj,{children:"A dictionary is essentially a javascript object. It\u2019s an object with key value pairs, and you can use the keys to pull the specific value associated with them. More importantly, a dictionary solves the problem of trying to match data from two different lists. Imagine that you have these two lists:"}),(0,d.jsxs)(i.EK,{children:["Pop =[ 20.5, 2.77, 39.21 ] ",(0,d.jsx)("br",{}),"Countries = [\u201cAfghanistan\u201d, \u201cAlbania\u201d, \u201calgeria\u201d ]"]}),(0,d.jsx)(i.cj,{children:"In this format, the two lists are disconnected. If the population of Albania is 20.5, then the task of pulling the population based on the country, would require you to use index or some other multi-step process. On the other hand, putting the lists in a dictionary, automatically connects the lists by creating key value pairs, and it allows us to pull values based on the keys."}),(0,d.jsx)(i.cj,{children:"Hence, if we wanted to put the pop and countries lists into a dictionary called world. Then the dictionary would look like this:"}),(0,d.jsxs)(i.EK,{children:["World = ","{",(0,d.jsx)("br",{}),'"afghanistan": 30.55, ',(0,d.jsx)("br",{}),'"albania": 2.77, ',(0,d.jsx)("br",{}),'"Algeria": 39.21 ',(0,d.jsx)("br",{}),"}",(0,d.jsx)("br",{})]}),(0,d.jsx)(i.cj,{children:"Now if we want to print the population of Albania, we can do that that with:"}),(0,d.jsx)(i.EK,{id:"chap2.2",children:"print(world[\u201calbania\u201d])"}),(0,d.jsx)(i.GL,{children:"What happens if you assign two values to one key ?"}),(0,d.jsxs)(i.cj,{children:["If you already assigned a key to a value, and then you assign the same key to another value, then the latter value overrides the first value. For example:"," "]}),(0,d.jsxs)(i.EK,{children:["world = ","{"," ",(0,d.jsx)("br",{}),'"afghanistan": 30.55, ',(0,d.jsx)("br",{}),'"albania": 2.77, ',(0,d.jsx)("br",{}),'"Algeria": 39.21, ',(0,d.jsx)("br",{}),'"albania": 2.92 ',"}"," ",(0,d.jsx)("br",{}),"# the dictionary world has the following key value pairs"]}),(0,d.jsxs)(i.EK,{children:["print(world) ",(0,d.jsx)("br",{}),"# print the dictionary ",(0,d.jsx)("br",{}),"{",'"afghanistan": 30.55, ',(0,d.jsx)("br",{}),'"albania": 2.92, ',(0,d.jsx)("br",{}),'"Algeria": 39.2 ',"}"," ",(0,d.jsx)("br",{}),"# output - here you can see that the first value of Albania was overridden by the second value"]}),(0,d.jsx)(i.cj,{id:"chap2.3",children:"The keys have have to be immutable objects which means that they cannot be changed. The values can be mutable, which means that they can be changed."}),(0,d.jsx)(i.GL,{children:"How to add new key / value pair to an existing list ?"}),(0,d.jsxs)(i.EK,{children:["world = ","{"," ",(0,d.jsx)("br",{}),'"afghanistan": 30.55, ',(0,d.jsx)("br",{}),'"albania": 2.77, ',(0,d.jsx)("br",{}),'"Algeria": 39.21, ',(0,d.jsx)("br",{}),"}"," # the dictionary world has the following key value pairs"]}),(0,d.jsxs)(i.EK,{children:["world [\u2018\u2019sealand\u2019\u2019 ] = 0.00027 ",(0,d.jsx)("br",{}),"# add the key value pair sealand / 0.00027 to this dictionary ",(0,d.jsx)("br",{})]}),(0,d.jsxs)(i.EK,{id:"chap2.4",children:["print(world) ",(0,d.jsx)("br",{}),"# print the dictionary ",(0,d.jsx)("br",{}),"{",' "afghanistan": 30.55, ',(0,d.jsx)("br",{}),'"albania": 2.77, ',(0,d.jsx)("br",{}),'"Algeria": 39.21, ',(0,d.jsx)("br",{}),'"sealand": 0.00027 ',"}"]}),(0,d.jsx)(i.GL,{children:"How to update the value of a key ? "}),(0,d.jsxs)(i.EK,{children:["world = ","{"," ",(0,d.jsx)("br",{}),'"afghanistan": 30.55, ',(0,d.jsx)("br",{}),'"albania": 2.77, ',(0,d.jsx)("br",{}),'"Algeria": 39.21, ',(0,d.jsx)("br",{}),'"sealand": 0.00027 ',"}"," ",(0,d.jsx)("br",{}),"# the dictionary world has the following key value pairs ",(0,d.jsx)("br",{})]}),(0,d.jsxs)(i.EK,{children:['world ["sealand"] = 2 ',(0,d.jsx)("br",{}),"# update the value of the key sealand ",(0,d.jsx)("br",{})]}),(0,d.jsxs)(i.EK,{id:"chap2.5",children:["print(world) ",(0,d.jsx)("br",{}),"# print the dictionary ",(0,d.jsx)("br",{}),"{"," \"afghanistan': 30.55, ",(0,d.jsx)("br",{}),'"albania": 2.77, ',(0,d.jsx)("br",{}),'"Algeria": 39.21, ',(0,d.jsx)("br",{}),'"sealand": 2 ',"}"," ",(0,d.jsx)("br",{}),"# output - sealands value has been updated"]}),(0,d.jsx)(i.GL,{children:" How to delete a key value pair in a dictionary ?"}),(0,d.jsxs)(i.EK,{children:["europe = ","{"," ",(0,d.jsx)("br",{}),'"spain" : "madrid", ',(0,d.jsx)("br",{}),'"france" : \'paris", ',(0,d.jsx)("br",{}),'"italy :\'rome", ',(0,d.jsx)("br",{}),'"poland" : \'warsaw", ',(0,d.jsx)("br",{}),'"australia" : "vienna" ',"}"," ",(0,d.jsx)("br",{}),"# the dictionary Europe has the following key value pairs"]}),(0,d.jsxs)(i.EK,{children:['del(europe["australia"]) ',(0,d.jsx)("br",{}),"#delete key australia and its values ",(0,d.jsx)("br",{})]}),(0,d.jsxs)(i.EK,{id:"chap2.6",children:["print(europe) ",(0,d.jsx)("br",{}),"# print the dictionary ",(0,d.jsx)("br",{}),"{",' "spain" : "madrid", ',(0,d.jsx)("br",{}),'"france" : "paris", ',(0,d.jsx)("br",{}),'"italy" : "rome", ',(0,d.jsx)("br",{}),'"poland" : "warsaw" ',"}"," ",(0,d.jsx)("br",{}),"# output - Australia has been deleted"]}),(0,d.jsxs)(i.GL,{children:[" ","Creating sub-dictionaries: dictionaries within dictionaries"]}),(0,d.jsxs)(i.cj,{children:["Lists can contain other lists. Similarly, dictionaries can contain key : value pairs, where the values are again dictionaries. These are called sub-dictionaries. For example:"," "]}),(0,d.jsx)(i.vo,{children:(0,d.jsx)(p.default,{id:"chap2.7",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/sub-dictionaries.png",alt:"A dictionary containing 4 sub dictionaries.  Each sub dictionary is a country containing that countries capital and population. ",width:550,height:433})}),(0,d.jsx)(i.GL,{children:"How to target a key that\u2019s in a sub-dictionary ?"}),(0,d.jsxs)(i.cj,{children:[" ","In the below example, you are working with a dictionary that contains data about Europe. For each country, you have the keys capital and population. Let\u2019s look at the data now:"]}),(0,d.jsx)(i.vo,{children:(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/sub-dictionaries.png",alt:"A dictionary containing 4 sub dictionaries.  Each sub dictionary is a country containing that countries capital and population. ",width:550,height:433})}),(0,d.jsx)(i.cj,{children:"If we want to print the capital of france, then we can do it like this:"}),(0,d.jsxs)(i.EK,{id:"chap2.8",children:["print(europe['france']['capital']) ",(0,d.jsx)("br",{}),"# print the value of the sub-dictionary: france and key: capital ",(0,d.jsx)("br",{}),"paris ",(0,d.jsx)("br",{}),"# output"]}),(0,d.jsx)(i.GL,{children:"Two methods to add a sub-dictionary to a dictionary ?"}),(0,d.jsxs)(i.cj,{children:[" ","In the below example, you are working with a dictionary that contains data about Europe. For each country, you have the keys capital and population. Let\u2019s look at the data now:"]}),(0,d.jsx)(i.vo,{children:(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/sub-dictionaries.png",alt:"A dictionary containing 4 sub dictionaries.  Each sub dictionary is a country containing that countries capital and population. ",width:550,height:433})}),(0,d.jsxs)(i.cj,{children:[" ","Now we want to add a new sub-dictionary with information about Italy. We can do this via two methods:"," "]}),(0,d.jsxs)(i.cj,{children:[" ","In the first method simultaneously: ",(0,d.jsx)("br",{}),"- create the sub-dictionary key / values ",(0,d.jsx)("br",{}),"- add it to the larger dictionary. ",(0,d.jsx)("br",{})]}),(0,d.jsxs)(i.EK,{children:['europe["italy"] = ',"{"," ",(0,d.jsx)("br",{}),"'capital' : 'rome', ",(0,d.jsx)("br",{}),"'population' : 59.83 ","}"," ",(0,d.jsx)("br",{}),"# simultaneously create and add ",(0,d.jsx)("br",{}),"# the sub-dictionary key / value pair to the larger dictionary"]}),(0,d.jsx)(i.vo,{children:(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/add-sub-dictionary.png",alt:"A dictionary containing 5 sub dictionaries.  Each sub dictionary is a country containing that countries capital and population. ",width:550,height:254})}),(0,d.jsxs)(i.cj,{children:["In the second method first store the sub-dictionary values in a variable then simultaneously: ",(0,d.jsx)("br",{}),"- set that variable as the value of the sub-dictionary key ",(0,d.jsx)("br",{}),"- add the key value pair to the larger dictionary ",(0,d.jsx)("br",{})]}),(0,d.jsxs)(i.EK,{children:["data = ","{","'capital' : 'rome', ",(0,d.jsx)("br",{}),"'population':59.83","}"," ",(0,d.jsx)("br",{}),"# create sub-dictionary data that contains data about italy ",(0,d.jsx)("br",{}),'europe["italy"] = data ',(0,d.jsx)("br",{}),"# add the sub-dictionary data ",(0,d.jsx)("br",{}),"as the value of the key italy"]}),(0,d.jsx)(i.vo,{children:(0,d.jsx)(p.default,{id:"chap2.9",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/add-sub-dictionary.png",alt:"A dictionary containing 5 sub dictionaries.  Each sub dictionary is a country containing that countries capital and population. ",width:550,height:254})}),(0,d.jsx)(i.GL,{children:"Comparison between lists and dictionaries "}),(0,d.jsx)(p.default,{id:"chap2.10",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/lists-dictionaries.png",alt:"Table containing comparisons between lists and dictionaries.",width:550,height:259}),(0,d.jsx)(i.GL,{children:"What is the Pandas package?"}),(0,d.jsxs)(i.cj,{children:[" ","2d numpy arrays are usually good for one data type. Most datasets are made of multiple datatypes. For example, a table dataset might have capital names as strings and populations as floats. In these type of situations you should use the pandas package."]}),(0,d.jsx)(i.cj,{id:"chap2.11",children:"Pandas is a data manipulation tool that was built on numpy. In pandas, we store the tabular data (I.e, data from a table) in an object called the DataFrame."}),(0,d.jsx)(i.GL,{children:" How to create a data DataFrame (brics data) ?"}),(0,d.jsx)(i.cj,{children:"There are two ways for creating a DataFrame."}),(0,d.jsx)(i.cj,{children:"First method: you can create a DataFrame manually by using a dictionary. In the dictionary, the keys are the column labels, and the values are the data. For example lets look at the following dictionary:"}),(0,d.jsxs)(i.EK,{children:["dict = ","{"," ",(0,d.jsx)("br",{}),'"country":["Brazil", "Russia", "India", "China", "South Africa"],',(0,d.jsx)("br",{}),'"capital":["Brasilia", "Moscow", "New Delhi", "Beijing", "Pretoria"],'," ",(0,d.jsx)("br",{}),'"area":[8.516, 17.10, 3.286, 9.597, 1.221], ',(0,d.jsx)("br",{}),'"population":[200.4, 143.5, 1252, 1357, 52.98] ',"}"]}),(0,d.jsx)(i.cj,{children:"In this dictionary, the keys are the the column labels, and the values are the data lists. We can convert this dictionary into a DataFrame like this:"}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import the pandas package as pd ",(0,d.jsx)("br",{}),"brics = pd.DataFrame(dict) ",(0,d.jsx)("br",{}),"# the variable brics stores the DataFrame of the dictionary called dict ",(0,d.jsx)("br",{})]}),(0,d.jsxs)(i.EK,{children:["print(brics)",(0,d.jsx)("br",{}),"# print brics"]}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/brics-dataframe.png",alt:"",width:550,height:158}),(0,d.jsx)(i.cj,{children:"In the above DataFrame, pandas automatically assigned the row labels 0 to 4. We can replace these numbers with custom labels like this:"}),(0,d.jsxs)(i.EK,{children:['brics.index = ["BR", "RU", "IN", "CH", "SA"] ',(0,d.jsx)("br",{}),"# assign these list elements as the index of the brics DataFrame"]}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/brics-dataframe-custom-index.png",alt:"",width:550,height:158}),(0,d.jsx)(i.cj,{children:"Second method: you can create a dataframe by importing data from a csv file. Csv stands for comma separated values. For example let's consider the following data from the csv file brics.csv"}),(0,d.jsxs)(i.EK,{children:[",country,capital,area,population ",(0,d.jsx)("br",{}),"BR,Brazil,Brasilia,8.516,200.4 ",(0,d.jsx)("br",{}),"RU,Russia,Moscow,17.10,143.5 ",(0,d.jsx)("br",{}),"IN,India,New Delhi,3.286,1252 ",(0,d.jsx)("br",{}),"CH,China,Beijing,9.597,1357 ",(0,d.jsx)("br",{}),"SA,South Africa,Pretoria,1.221,52.98 ",(0,d.jsx)("br",{})]}),(0,d.jsx)(i.cj,{children:"Now let's store this data in a variable and then print it."}),(0,d.jsxs)(i.EK,{children:['brics = pd.read_csv("path/to/brics.csv") ',(0,d.jsx)("br",{}),"# the variable brics stores a process ",(0,d.jsx)("br",{}),"# pandas will read the csv file through its path ",(0,d.jsx)("br",{}),"print(brics) ",(0,d.jsx)("br",{}),"# print brics"]}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/brics-dataframe-csv.png",alt:"",width:550,height:158}),(0,d.jsx)(i.cj,{children:"In the above DataFrame, pandas assigned the row labels 0 to 4 as the index. It also interpreted our row labels (ru, in, etc) as the values of the first column (column 0). This is a wrong interpretation because we want our row lables to be the index. We can declare that the first column (row labels) should be the index, and then re-print our dataframe like this:"}),(0,d.jsxs)(i.EK,{children:['brics = pd.read_csv("path/to/brics.csv", index_col = 0) ',(0,d.jsx)("br",{}),"# the variable brics stores a process ",(0,d.jsx)("br",{}),"# pandas will read the csv file through its path ",(0,d.jsx)("br",{}),"# it will assign column 0 as the index ",(0,d.jsx)("br",{}),"print(brics) ",(0,d.jsx)("br",{}),"# print brics"]}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/brics-dataframe-csv-custom-index.png",alt:"",width:550,height:193}),(0,d.jsxs)(i.cj,{id:"chap2.12",children:["The pandas read.csv provides a lot of ways to customize your DataFrame. Read more about the package"," ",(0,d.jsx)(i.LY,{href:"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html",children:"here"})," ","."]}),(0,d.jsx)(i.GL,{children:"How to create a DataFrame using (cars data) ? "}),(0,d.jsx)(i.EN,{children:"Overview"}),(0,d.jsx)(i.cj,{children:"For this exercise, you will work with vehicle data from different countries. The data will contain country names, whether the people drive left or right, and the number of cars per 1000 people."}),(0,d.jsx)(i.EN,{children:"Instructions"}),(0,d.jsx)(i.cj,{children:"Use pd.DataFrame() to print a DataFrame called cars. The country codes will be the row index. Each row will have the following country-specific data points:"}),(0,d.jsx)(i.ro,{children:" Country names. "}),(0,d.jsx)(i.ro,{children:" Boolean (true if people drive right). "}),(0,d.jsx)(i.ro,{children:" The number of motor vehicles per 1000 people. "}),(0,d.jsx)(i.cj,{children:"We will use two different methods to do this exercise."}),(0,d.jsx)(i.EN,{children:"Method 1: create the DataFrame using a dictionary"}),(0,d.jsx)(i.cj,{children:"Our dictionary will contains the following three lists:"}),(0,d.jsx)(i.ro,{children:" The variable called names contains all the country names."}),(0,d.jsx)(i.ro,{children:" The variable called dr contains booleans. "}),(0,d.jsx)(i.Cp,{children:" True if people drive right. "}),(0,d.jsx)(i.Cp,{children:" False if they drive left. "}),(0,d.jsxs)(i.ro,{children:[" ","The variable cpc contains the number of motor vehicles per 1000 people."]}),(0,d.jsxs)(i.EK,{children:["names = ['United States', 'Australia', 'Japan', 'India', 'Russia', 'Morocco', 'Egypt'] ",(0,d.jsx)("br",{}),"dr = [True, False, False, False, True, True, True] ",(0,d.jsx)("br",{}),"cpc = [809, 731, 588, 18, 200, 70, 45] ",(0,d.jsx)("br",{}),"# add pre-defined lists ",(0,d.jsx)("br",{})]}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"my_dict = ","{"," ",(0,d.jsx)("br",{}),'"country" : names, ',(0,d.jsx)("br",{}),'"drives_right" : dr, ',(0,d.jsx)("br",{}),'"cars_per_cap" : cpc ',"}"," ",(0,d.jsx)("br",{}),"# create dictionary my_dict with three key:value pairs"]}),(0,d.jsxs)(i.EK,{children:["cars = pd.DataFrame(my_dict) ",(0,d.jsx)("br",{}),"# the variable cars stores a process ",(0,d.jsx)("br",{}),"# build the DataFrame with the dictionary my_dict ",(0,d.jsx)("br",{}),"row_labels = ['US', 'AUS', 'JPN', 'IN', 'RU', 'MOR', 'EG'] ",(0,d.jsx)("br",{}),"# add row labels ",(0,d.jsx)("br",{}),"cars.index = row_labels ",(0,d.jsx)("br",{}),"# assign row labels as the index of the dataframe"]}),(0,d.jsxs)(i.EK,{children:["print(cars) ",(0,d.jsx)("br",{}),"# print cars ",(0,d.jsx)("br",{})]}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184})," ",(0,d.jsx)("p",{children:(0,d.jsx)(i.EN,{children:"Method 2: create the DataFrame from a csv."})}),(0,d.jsxs)(i.cj,{children:["Imagine that we already have a file in our folder called cars.csv and this file contains all the data. The path to the file is simply 'cars.csv'"," "]}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["print(cars) ",(0,d.jsx)("br",{}),"# print out cars"]}),(0,d.jsx)(p.default,{id:"chap2.13",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.GL,{children:"Using square brackets to select rows and columns."}),(0,d.jsx)(i.cj,{id:"chap2.14",children:"You can index and select rows, column, observations from Pandas DataFrames in many different ways. The simplest, but not the most powerful way, is to use square brackets."}),(0,d.jsx)(i.GL,{children:"How to use square brackets to print a pandas series with one selected column ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the country column in a series; so we will be using the single square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas package as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["print(cars['country']) ",(0,d.jsx)("br",{}),"# print out country column as Pandas Series"]}),(0,d.jsx)(p.default,{id:"chap2.15",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/one-column-series.png",alt:"",width:550,height:184}),(0,d.jsx)(i.GL,{children:"How to use square brackets to print a pandas DataFrame with one selected column ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the country column in a DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["# print(cars[['country']]) ",(0,d.jsx)("br",{}),"# print out country column as Pandas DataFrame"]}),(0,d.jsx)(p.default,{id:"chap2.16",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/one-column-dataframe.png",alt:"",width:550,height:184}),(0,d.jsx)(i.GL,{children:"How to use square brackets to print a pandas DataFrame with multiple selected columns ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the country and drives_right columns in a DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["print(cars[['country', 'drives_right']]) ",(0,d.jsx)("br",{}),"# print out a DataFrame with country and drives_right columns"]}),(0,d.jsx)(p.default,{id:"chap2.17",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/two-columns-dataframe.png",alt:"",width:550,height:184}),(0,d.jsx)(i.GL,{children:"How to use square brackets to print a pandas DataFrame with multiple selected rows ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the first three rows (US,AUS,JPN) in a DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["print(cars[0:3]) ",(0,d.jsx)("br",{}),"# Print out first 3 rows / observations"]}),(0,d.jsx)(p.default,{id:"chap2.18",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/three-rows-dataframe.png",alt:"",width:550,height:184}),(0,d.jsx)(i.GL,{children:"Using loc and iloc to select rows and columns."}),(0,d.jsx)(i.cj,{id:"chap2.19",children:"With loc and iloc you can do practically any data selection operation on DataFrames you can think of. loc is label-based, which means that you have to specify rows and columns based on their row and column labels. iloc is integer index based, so you have to specify rows and columns by their integer index."}),(0,d.jsx)(i.GL,{children:"How to use loc to print a pandas series with one selected row ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the Russia row in a series; so we will be using the single square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["cars.loc['RU'] ",(0,d.jsx)("br",{}),"# Print out observation that has the label RU"]}),(0,d.jsx)(p.default,{id:"chap2.20",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-series-one-row.png",alt:"",width:550,height:118}),(0,d.jsx)(i.GL,{children:"How to use loc to print a pandas DataFrame with one selected row ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the Russia row in a DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["cars.loc[['RU']] ",(0,d.jsx)("br",{}),"# print out observation that has the label RU"]}),(0,d.jsx)(p.default,{id:"chap2.21",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-iloc-dataframe-one-row.png",alt:"",width:550,height:73}),(0,d.jsx)(i.GL,{children:"How to use iloc to print a pandas DataFrame with one selected row ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the Russia row in a DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["cars.iloc[[4]] ",(0,d.jsx)("br",{}),"# print out observation that has the label RU"]}),(0,d.jsx)(p.default,{id:"chap2.22",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-iloc-dataframe-one-row.png",alt:"",width:550,height:73}),(0,d.jsx)(i.GL,{children:"How to use loc to print a pandas DataFrame with two selected rows ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the Russia and australia rows in a DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["cars.loc[['RU', 'AUS']] ",(0,d.jsx)("br",{}),"# print out observation that has the label RU"]}),(0,d.jsx)(p.default,{id:"chap2.23",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-iloc-dataframe-two-row.png",alt:"",width:550,height:73}),(0,d.jsx)(i.GL,{children:"How to use iloc to print a pandas DataFrame with two selected rows ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the Russia and australia rows in a DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["cars.iloc[[4,1]] ",(0,d.jsx)("br",{}),"# print out observation that has the label RU"]}),(0,d.jsx)(p.default,{id:"chap2.24",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-iloc-dataframe-two-row.png",alt:"",width:550,height:73}),(0,d.jsx)(i.GL,{children:"How to use loc to print the value of a selected row and column?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out drives_right value of Morocco. Since we are only printing one value, we will be using the single square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["print(cars.loc['MOR', 'drives_right']) ",(0,d.jsx)("br",{}),"# print the drives_right value of Morocco"]}),(0,d.jsx)(p.default,{id:"chap2.25",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-intersection-value.png",alt:"",width:550,height:49}),(0,d.jsx)(i.GL,{children:"How to use loc to print a pandas DataFrame, with two selected columns of two selected observations (rows) ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the drives_right value of Russia and Morocco in a DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["print(cars.loc[['RU','MOR'], ['country', 'drives_right']]) ",(0,d.jsx)("br",{}),"# print out the drives_right value of Russia and Morocco"]}),(0,d.jsx)(p.default,{id:"chap2.26",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-two-intersection-values.png",alt:"",width:550,height:81}),(0,d.jsx)(i.GL,{children:"How to use loc to print a series with a selected column ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the drives_right value of all observations(rows) in a pandas series; so we will be using the single square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["pring(cars.loc[:, 'drives_right']) ",(0,d.jsx)("br",{}),"# print out the drives_right value of all observations"]}),(0,d.jsx)(p.default,{id:"chap2.27",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-series-one-column.png",alt:"",width:550,height:185}),(0,d.jsx)(i.GL,{children:"How to use loc to print a DataFrame with a selected column ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the drives_right value of all observations(rows) in a pandas DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["pring(cars.loc[:, ['drives_right']]) ",(0,d.jsx)("br",{}),"# print out the drives_right value of all observations"]}),(0,d.jsx)(p.default,{id:"chap2.28",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-dataframe-one-column.png",alt:"",width:550,height:185}),(0,d.jsx)(i.GL,{children:"How to use loc to print a DataFrame with two selected column ?"}),(0,d.jsx)(i.cj,{children:"For this example, we are going to be using the cars.csv:"}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/countries-cars-example.png",alt:"",width:550,height:184}),(0,d.jsx)(i.cj,{children:"Our goal is to print out the cars_per_cap and drives_right values of all observations(rows) in a pandas DataFrame; so we will be using the double square brackets."}),(0,d.jsxs)(i.EK,{children:["import pandas as pd ",(0,d.jsx)("br",{}),"# import pandas as pd ",(0,d.jsx)("br",{}),"cars = pd.read_csv('cars.csv', index_col = 0) ",(0,d.jsx)("br",{}),"# import the cars.csv data: cars and the index is column 0"]}),(0,d.jsxs)(i.EK,{children:["print(cars.loc[:, ['cars_per_cap','drives_right']]) ",(0,d.jsx)("br",{}),"# print out the cars_per_cap and drives_right value of all observations"]}),(0,d.jsx)(p.default,{id:"",loader:u,src:"Elir-Mahad/notes/main/assets/interpygraphs/loc-dataframe-two-columns.png",alt:"",width:550,height:185})]})};var b=function(){return(0,d.jsxs)("div",{children:[(0,d.jsxs)(t.default,{children:[(0,d.jsx)("title",{children:"Intermediate python"}),(0,d.jsx)("meta",{name:"keywords",content:""}),(0,d.jsx)("meta",{name:"description",content:""}),(0,d.jsx)("link",{href:"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400&display=swap",rel:"stylesheet"})]}),(0,d.jsx)(i.DZ,{className:o().weight100,children:"Intermediate python"}),(0,d.jsxs)(i.HK,{children:[(0,d.jsxs)(i.cj,{id:"chap1.1",children:[" ","In this post, i will record some of my notes from datacamps intermediate python course. I am big fan of javascript, and i noticed that there are a lot of similarities between javascript and python. Therefore, wherever I see similarities between javascript and python, i will point them out."," "]}),(0,d.jsx)(h,{}),(0,d.jsx)(j,{}),(0,d.jsx)(m,{})]})]})}},1354:function(a,s,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/intermediate-python",function(){return e(4575)}])},214:function(a){a.exports={weight100:"Home_weight100__7sKo3",pmicon:"Home_pmicon__6yTo7",pmitem:"Home_pmitem__DP9o2",description:"Home_description__41Owk",words:"Home_words__rk1Z1",word:"Home_word__3Rnwl",slideWords:"Home_slideWords__9Pq_g",oneLiner:"Home_oneLiner__S91zd"}}},function(a){a.O(0,[955,517,675,774,888,179],(function(){return s=1354,a(a.s=s);var s}));var s=a.O();_N_E=s}]);